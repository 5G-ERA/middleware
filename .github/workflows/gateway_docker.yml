name: Gateway docker build

on:
  workflow_dispatch:
    inputs:
     -dummy:
  schedule:
    - cron: 0 3 * * 1-5

jobs:
  build_and_deploy:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3   

    - name: Build image
      env:
        IMAGE_REPOSITORY: ${{ secrets.GATEWAY_REPO_NAME }}
      run: docker build -f ./src/OcelotGateway/Dockerfile ./src --tag $IMAGE_REPOSITORY --label "runnumber=${GITHUB_RUN_ID}"
      
    - name: Log in to registry
      # This is where you will update the personal access token to GITHUB_TOKEN
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $ --password-stdin

    - name: Push image
      env:
        IMAGE_REPOSITORY: ${{ secrets.GATEWAY_REPO_NAME }}
      run: |
        IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_REPOSITORY

        # Change all uppercase to lowercase
        IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')          
        # Use Docker `edge` tag convention
        VERSION=edge
        echo IMAGE_ID=$IMAGE_ID
        echo VERSION=$VERSION
        docker tag $IMAGE_REPOSITORY $IMAGE_ID:edge
        docker push $IMAGE_ID:edge

  
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-west-1    

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
      
    - name: Build, tag, and push the image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_REPOSITORY: ${{ secrets.GATEWAY_REPO_NAME }}
        AWS_KEY_ID: ${{ secrets.AWS_APP_KEY_ID }}
        AWS_SECRET_KEY: ${{ secrets.AWS_APP_SECRET_KEY }}
        IMAGE_TAG: edge
      run: |
        # Build a docker container and push it to ECR 
        docker build -f ./src/OcelotGateway/Dockerfile -t $ECR_REGISTRY/$IMAGE_REPOSITORY:$IMAGE_TAG \
         --build-arg AWS_KEY_ID=$AWS_KEY_ID --build-arg AWS_SECRET_KEY=$AWS_SECRET_KEY ./src
        echo "Pushing image to ECR..."
        docker push $ECR_REGISTRY/$IMAGE_REPOSITORY:$IMAGE_TAG
        echo "::set-output name=image::$ECR_REGISTRY/$IMAGE_REPOSITORY:$IMAGE_TAG"
