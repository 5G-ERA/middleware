apiVersion: v1
kind: Service
metadata:
  name: orchestrator-api
spec:
  type: ClusterIP
  selector:
    name: orchestrator-api
  ports:
    - port: 80
      targetPort: 80
      name: http
---
apiVersion: v1
kind: Service
metadata:
  name: gateway
spec:
  type: NodePort
  selector:
    app: gateway
  ports:
    - port: 80
      nodePort: 31000

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: orchestrator-api
spec:
  selector:
    matchLabels:
      name: orchestrator-api
  template:
    metadata:
      labels:
        name: orchestrator-api
    spec:
      serviceAccountName: orchestrator
      automountServiceAccountToken: true
      nodeSelector:
        kubernetes.io/os: linux
      imagePullSecrets:
        - name: awsecr-cred
      containers:
        - name: orchestrator-api
          image: ghcr.io/5g-era/orchestrator-api:v0.8.0
          imagePullPolicy: Always
          resources: {}
          env:
            - name: AWS_IMAGE_REGISTRY
              value: ghcr.io/5g-era # to be replaced with real value
            - name: REDIS_INTERFACE_API_SERVICE_HOST
              value: redis-interface-api # to be replaced with real value
            - name: REDIS_INTERFACE_API_SERVICE_PORT
              value: "80"
            - name: Middleware__Organization
              value: 5G-ERA
            - name: Middleware__InstanceName
              value: MiddlewareVladMain
            - name: Middleware__InstanceType
              value: Edge
            - name: CENTRAL_API_HOSTNAME
              value: central-api.5gera.net
            - name: AWS_ACCESS_KEY_ID
              value: AKIAVXYBVN7H3ID4JCZJ
            - name: AWS_SECRET_ACCESS_KEY
              value: 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
            - name: Middleware__Address
              value: "http://192.168.50.51:31000"
