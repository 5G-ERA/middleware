apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis
spec:
  serviceName: redis
  replicas: 3
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      initContainers:
      - name: config
        image: redis/redis-stack-server:6.2.6-v2
        command: [ "bash", "-c" ]
        args:
          - |
            cp /tmp/redis/redis-stack.conf /etc/redis/redis-stack.conf
            echo "finding master..."
            MASTER_FDQN=`hostname  -f | sed -e 's/redis-[0-9]\./redis-0./'`
            if [ "$(redis-cli -h replica -p 5000 ping)" != "PONG" ]; then
              echo "master not found, defaulting to redis-0"
              if [ "$(hostname)" == "redis-0" ]; then
                echo "this is redis-0, not updating config..."
              else
                echo "updating redis-stack.conf..."
                echo "slaveof $MASTER_FDQN 6379" >> /etc/redis/redis-stack.conf
              fi
            else
              echo "replica found, finding master"
              MASTER="$(redis-cli -h replica -p 5000 replica get-master-addr-by-name mymaster | grep -E '(^redis-\d{1,})|([0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3})')"
              echo "master found : $MASTER, updating redis-stack.conf"
              echo "slaveof $MASTER 6379" >> /etc/redis/redis-stack.conf
            fi
        volumeMounts:
        - name: redis-config
          mountPath: /etc/redis/
        - name: config
          mountPath: /tmp/redis/
      containers:
      - name: redis
        image: redis/redis-stack-server:6.2.6-v2
        command: ["bash", "-c", "cp /etc/redis/redis-stack.conf /redis-stack.conf && /entrypoint.sh"]        
        ports:
        - containerPort: 6379
          name: redis
        volumeMounts:
        - name: data
          mountPath: /data
        - name: redis-config
          mountPath: /etc/redis/
      volumes:
      - name: redis-config
        emptyDir: {}
      - name: config
        configMap:
          name: redis-config
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: "redis-storage"
      resources:
        requests:
          storage: 2Gi